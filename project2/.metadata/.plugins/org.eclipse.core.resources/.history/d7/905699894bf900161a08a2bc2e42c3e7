/*
 * access_functions.c
 *
 *  Created on: Feb 16, 2017
 *      Author: coltonp
 */

#include "access_functions.h"

node* create(int data,node* next)
{
    node* new_node = (node*)malloc(sizeof(node));
    if(new_node == NULL)
    {
        printf("Error creating a new node.\n");
        exit(0);
    }
    new_node->data = data;
    new_node->next = next;

    return new_node;
}

// User Tasks access serial channel for reading
// Returns True if a read spot was available
// Returns false if
bool OpenR(_queue_id stream_no){

	if (OpenRStatus == false) {
		OpenRStatus = true;
		read_queue[count] = stream_no;
		count++;
		return true;
		}
	else {
		return false;
	}
	//
}

// User Task actually gets data from serial channel
bool _getline(char * string){
	return false;
}
// Access serial channel for writing
// Returns true if a write spot was available , else false
_queue_id OpenW(){
	if (OpenWStatus == false) {
		OpenWStatus = true;
		return true;
		}
	else {
		return false;
	}
}
// Actually put a string onto the serial channel
_queue_id _putline(_queue_id qid, char * string){
	return 1;
}
// Revoke read and/or write priveledges
bool Close(){
	OpenRStatus = false;
	OpenWStatus = false;
}
